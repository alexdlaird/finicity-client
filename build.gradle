apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'jacoco'

def projectGroup = 'com.finicityclient'
def projectArtifactId = 'finicityclient'
def projectVersion = '1.0.0-SNAPSHOT'

mainClassName = 'com.finicityclient.DefaultFinicityClient'
jar {
    group = projectGroup
    baseName = projectArtifactId
    version = projectVersion

    manifest {
        attributes 'Main-Class': "$mainClassName"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
    module {
        inheritOutputDirs = false
        outputDir = file('out')
        testOutputDir = file('out-test')
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

jacocoTestReport {
    group = 'Reporting'
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}

task coverage(dependsOn: [jacocoTestReport]) {
    group = 'Reporting'
    description = 'Generate a code coverage report'
}
coverage.mustRunAfter test

task buildAll(dependsOn: [build, test, coverage, javadoc, jar]) {
    group = 'Verification'
    description = 'Verification to run before building'
}

repositories {
    jcenter()
}

dependencies {
    // Data and Serialization
    compile('org.simpleframework:simple-xml:2.7.1')

    // Test
    testCompile('org.unitils:unitils-core:3.4.2')
}
